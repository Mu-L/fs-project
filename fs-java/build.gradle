
buildscript {
    ext {
        springBootVersion = '3.5.0'
        shadowVersion = '4.0.3'
    }
    repositories {
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.github.jengelman.gradle.plugins:shadow:${shadowVersion}")
    }
}

subprojects {

    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'java-library'

    version = '0.0.1-SNAPSHOT'

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        mavenCentral()
        jcenter()
    }

    // 定义版本号
    ext {
        lombokVersion = '1.18.38'
        cliVersion = '1.4'
        nettyVersion = '4.1.36.Final'
        lang3Version = '3.17.0'
        pool2Version = '2.12.1'
        springBootVersion = '3.5.0'
        springCloudVersion = '4.3.0'
        feignVersion = '13.6' // based on cloud version
        resilience4jVersion = '3.3.0' // based on cloud version
        scalaVersion = '2.12' // based on spark and flink version
        sparkVersion = '3.3.3'
        flinkVersion = '1.17.1'
        /**
         * CDC Connectors Supported Flink Versions
         * https://ververica.github.io/flink-cdc-connectors/master/content/about.html
         */
        cdcVersion = '2.4.2'
        hudiVersion = '0.14.0'
        hadoopVersion = '3.3.6' // based on spark version
        swaggerVersion = '2.9.2'
        torchVersion = '1.10.0'
        tensorflowVersion = '1.12.0'
        zookeeperVersion = '3.5.8'
        curatorVersion = '4.3.0' // with zookeeper compatibility
        mongodbVersion = '4.5.1'
        mysqlVersion = '9.3.0'
        rabbitmqVersion = '5.10.0'
        elasticVersion = '7.15.1'
        flowableVersion = '7.1.0'
        quartzVersion = '2.3.2'
        neo4jVersion = '5.28.5'
    }

    dependencies {
        compileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
        testImplementation group: 'org.projectlombok', name: 'lombok', version: lombokVersion
        testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    }

    task jars(type: Copy) { // 导出模块所有的运行时依赖
        from configurations.runtimeClasspath
        into 'build/opt' // 目标依赖位置
    }

    test {
        enabled = false
    }

}
